{"version":3,"sources":["../src/ESProxy.js"],"names":["ESProxy","host","index","client","Client","key","cb","body","query","multi_match","fields","fuzziness","search","err","response","undefined","map","hits","hit","assign","_source","_id","lat","lon","distance","bool","filter","geo_distance","geom","points","geo_polygon","id","ids","values","text","autocomplete","prefix","completion","field","suggest","length","options","option"],"mappings":"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","file":"ESProxy.js","sourcesContent":["import elasticsearch from 'elasticsearch';\r\nimport _ from 'lodash';\r\n\r\nexport default class ESProxy{\r\n    constructor(host, index){\r\n        this.index = index;\r\n        this.client = new elasticsearch.Client({\r\n            host: host\r\n        });\r\n    }\r\n\r\n    SearchPoiByKey(key, cb){\r\n        var body = {\r\n            query: {\r\n                multi_match: {\r\n                    query: key,\r\n                    fields: [\"name^2\", \"address^1\"],\r\n                    fuzziness: 2\r\n                }\r\n            }\r\n        };\r\n\r\n        this.client.search({\r\n            index: this.index,\r\n            body: body\r\n        }, function(err, response){\r\n            if(err != undefined){\r\n                cb(err);\r\n            } else {\r\n                cb(null, _.map(response.hits.hits, function(hit){\r\n                    return _.assign({}, hit._source, {\r\n                        _id: hit._id\r\n                    })\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    SearchPoiByPoint(lat, lon, distance, cb){\r\n        distance = distance || '1km'\r\n\r\n        var body = {\r\n            query: {\r\n                bool: {\r\n                    filter: {\r\n                        geo_distance: {\r\n                            distance: distance,\r\n                            geom: {\r\n                                lat: lat,\r\n                                lon: lon\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        this.client.search({\r\n            index: this.index,\r\n            body: body\r\n        }, function(err, response){\r\n            if(err != undefined){\r\n                cb(err);\r\n            } else {\r\n                cb(null, _.map(response.hits.hits, function(hit){\r\n                    return _.assign({}, hit._source, {\r\n                        _id: hit._id\r\n                    })\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    SearchPoiByPolygon(points, cb){\r\n        var body = {\r\n            query: {\r\n                bool: {\r\n                    filter: {\r\n                        geo_polygon: {\r\n                            geom: {\r\n                                points: points\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        this.client.search({\r\n            index: this.index,\r\n            body: body\r\n        }, function(err, response){\r\n            if(err != undefined){\r\n                cb(err);\r\n            } else {\r\n                cb(null, _.map(response.hits.hits, function(hit){\r\n                    return _.assign({}, hit._source, {\r\n                        _id: hit._id\r\n                    })\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    SearchPoiById(id, cb){\r\n        var body = {\r\n            query: {\r\n                ids: {\r\n                    values: [id]\r\n                }\r\n            }\r\n        };\r\n\r\n        this.client.search({\r\n            index: this.index,\r\n            body: body\r\n        }, function(err, response){\r\n            if(err != undefined){\r\n                cb(err);\r\n            } else {\r\n                cb(null, _.map(response.hits.hits, function(hit){\r\n                    return _.assign({}, hit._source, {\r\n                        _id: hit._id\r\n                    })\r\n                }));\r\n            }\r\n        });\r\n    }\r\n\r\n    InputTips(text, cb){\r\n        var body = {\r\n            autocomplete: {\r\n                prefix: text,\r\n                completion: {\r\n                    field: 'suggest'\r\n                }\r\n            }\r\n        };\r\n\r\n        this.client.suggest({\r\n            index: this.index,\r\n            body: body\r\n        }, function(err, response){\r\n            if(err != undefined){\r\n                cb(err);\r\n            } else {\r\n                if(response.autocomplete.length > 0){\r\n                    cb(null, _.map(response.autocomplete[0].options, function(option){\r\n                        return _.assign({}, option._source, {\r\n                            _id: option._id\r\n                        })\r\n                    }))\r\n                } else {\r\n                    cb(null, []);\r\n                }\r\n            }\r\n        });\r\n    }\r\n}"]}